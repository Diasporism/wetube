<%= render "header" %>
<%= render "chat" %>
<%= render "playlist" %>
<%= render "video" %>
<%= render "controls" %>

<%= subscribe_to "/theaters/show/#{@theater.id}" %>

<script type="text/javascript">
  var cache = {};
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  function findCurrentVideo() {
    return playlist().children().first();
  }

  function playlist() {
    if (playlist in cache) {
      return cache[playlist];
    } else {
      return cache[playlist] = $('#playlists-container > div');
    }
  }

  function increment_slider() {
    $("#slider").slider({ max: player.getDuration() });
    var current_value = $("#slider").slider( "option", "value" );
    $("#slider").slider({ value: (current_value + 1) });
  }

  function onYouTubeIframeAPIReady() {
    player = new YT.Player('video', {
      videoId: findCurrentVideo().data('video-id'),
      playerVars: {
        controls: 0,
        modestbranding: 1,
        rel: 0,
        showinfo: 0,
        iv_load_policy: 3,
        disablekb: 1
      },
      events: {
        'onStateChange': onPlayerStateChange
      }
    });
  }

  function onPlayerStateChange(event) {
    if (event.data === YT.PlayerState.ENDED) {
      uID = findCurrentVideo().data('unique-id');
      findCurrentVideo().remove();
      player.loadVideoById(findCurrentVideo().data('video-id'));    
      $("#slider").slider({ value: 0 });
      clearInterval(interval);
    }
    if (event.data === YT.PlayerState.PLAYING) {
      interval = setInterval(increment_slider, 1000);
    }
    if (event.data === YT.PlayerState.PAUSED) {
      clearInterval(interval);
    }
  }
</script>